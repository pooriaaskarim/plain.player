import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_svg/svg.dart';

import '../../bloc/splash_screen_bloc.dart';
import '../../bloc/splash_screen_state.dart';
import 'logo_custom_paint.dart';

class Logo extends StatefulWidget {
  const Logo({
    required this.screenWidth,
    required this.themeData,
    required this.splashScreenBloc,
    super.key,
  });
  final ThemeData themeData;
  final double screenWidth;
  final SplashScreenBloc splashScreenBloc;
  @override
  State<Logo> createState() => _LogoState();
}

class _LogoState extends State<Logo> with SingleTickerProviderStateMixin {
  late Size _logoSize;
  final double _logoToScreenWidthScaleDownFactor = 2.1;
  late AnimationController _loadingAnimationController;
  late Animation<double> _onInitLoading;
  @override
  void initState() {
    super.initState();
    _logoSize = Size(
      widget.screenWidth / _logoToScreenWidthScaleDownFactor,
      widget.screenWidth / (_logoToScreenWidthScaleDownFactor * 2),
    );
    _loadingAnimationController = AnimationController(
      duration: const Duration(
        seconds: 3,
      ),
      vsync: this,
      value: 0,
      animationBehavior: AnimationBehavior.normal,
      lowerBound: 0,
      upperBound: 1,
    );
    _onInitLoading = CurvedAnimation(
        parent: _loadingAnimationController, curve: Curves.easeIn);
  }

  @override
  void dispose() {
    _loadingAnimationController.dispose();
    super.dispose();
  }

  @override
  Widget build(final BuildContext context) {
    final String logoColorHex = widget.themeData.colorScheme.primary.value
        .toRadixString(16)
        .substring(2, 8);

    final String logoSVGString = '''
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 500.00243 257.56504">
        <g id="Logo">
        <path d="M0,124.98879c7.12782.00145,36.41436-.02019,42.61565-.01962,9.04646-.22743,18.33277.57621,26.64973,4.46434,12.21837,5.48606,19.05932,14.99477,22.49365,27.51888a123.74083,123.74083,0,0,1,3.14318,12.76992c.96852,7.18043.76973,14.41612.70321,21.58328-.41085,17.21521-1.20416,34.42383-4.51406,51.43127-1.27485,4.8548-2.64922,13.36683-8.52754,14.7442-4.49867.75229-7.29119-3.70611-8.84461-7.12366-2.59621-5.40281-4.93688-11.05882-5.841-17.09774a83.38911,83.38911,0,0,1-.46135-13.48468c.98507-23.17126,5.53275-45.62372,10.73276-68.05625C82.77406,133.557,87.06023,115.13,95.21853,98.06909c11.56644-22.71393,38.801-48.80212,62.44482-24.57,15.43324,16.14631,13.43221,42.02613,3.85788,60.63586a50.42036,50.42036,0,0,1-26.74443,24.30265c-11.14562,4.41743-28.99623,7.18871-39.97624,1.61467-5.31985-2.79061-8.49674-9.40107-3.02-13.986,3.59406-2.75943,7.6845-2.85658,11.73442-2.14174,4.15869.96674,7.89193,3.54509,11.2864,5.72513,7.09743,4.9299,13.65286,10.28813,20.60983,15.29244,7.377,5.98624,13.4526,6.80471,21.82485,2.00373,17.57732-10.94759,30.06615-35.10415,38.26233-53.74266,13.01126-31.51608,21.97815-67.36734,16.44834-101.41493a8.96658,8.96658,0,0,0-1.1005-3.0496,1.8619,1.8619,0,0,0-.67946-.74953,6.93112,6.93112,0,0,0-3.548,2.42141c-13.026,16.04821-19.277,53.73347-21.10291,74.5115-1.48658,20.48943-2.05671,46.02372,7.49823,64.49625,11.688,21.27346,34.32136,23.01589,53.90213,11.17818,13.776-8.36228,25.4277-22.4581,27.64151-38.82067a35.21135,35.21135,0,0,0-6.27694-25.13892c-2.68427-4.4411-6.19563-5.606-11.34093-4.846-7.95877,1.37446-15.00219,6.26863-21.09569,11.31045-11.19615,9.19051-20.87765,26.45184-21.58746,40.92144-.71925,9.90545,6.21879,19.05948,15.51221,21.924,7.893,2.55528,13.98271-.12643,19.96671-5.08055,10.55771-8.46537,17.56767-20.37015,22.53267-33.08209a123.10513,123.10513,0,0,0,4.88036-15.75493c1.518-6.83175,2.97106-13.82938,2.62672-20.70518-.01981-.20731-.07666-.40022-.03544-.2649.1009.13287-.06417.22957.77725,1.15679.71854,1.71127,5.60145.45744,4.05061.7021-6.73712,3.967-11.07937,11.51-14.57687,18.55454-7.58425,16.47131-10.45079,37.0459-.68292,53.02871,4.35965,6.72622,12.17582,3.25082,17.48752-.62882,8.77381-6.44665,15.95263-15.52262,21.6656-24.8702a88.2465,88.2465,0,0,0,11.79617-31.30485c.82777-5.24741,1.6407-10.75781.9776-15.97538a5.01473,5.01473,0,0,0-.35387-1.26945c-.06126-.11645-.12283-.19683-.11175-.12695a.91336.91336,0,0,0,.39347.40736,1.88037,1.88037,0,0,0,.80114.28224c.17645.0193.22861-.01289.15514.03276a26.50441,26.50441,0,0,0-6.13461,5.80646c-9.68772,12.648-13.42889,29.70981-14.23285,45.43917-.14552,6.88577-.11378,13.78515,2.64615,19.87917,7.35014,15.21877,23.55242-3.55871,29.34038-11.35272,10.1487-13.496,15.5312-30.20178,17.319-46.92693.3933-4.48338,1.16843-9.174.36562-13.489-.05777-.1352-.1079-.26938-.10465-.1953a1.42828,1.42828,0,0,0,.54466.69784,2.56977,2.56977,0,0,0,1.8631.5033,7.59862,7.59862,0,0,0-.88674.67023c-13.83989,12.46388-15.96282,38.472-15.72133,56.24382.33514,6.926.57522,14.06762,2.67242,20.5249.0312.07142.05486.11277.04771.10311a1.82739,1.82739,0,0,0-.29488-.35914,3.42431,3.42431,0,0,0-3.06718-.904c-2.58215.89131-2.08806,1.48269-2.32453,1.48909-.06171.10415-.02991.058-.00049-.01412l.12035-.29383c5.73393-19.07527,9.2427-39.35635,19.35729-56.8523,7.29415-12.7328,21.1598-32.21116,38.25272-26.52548,14.29007,5.19808,15.07483,18.90563,12.16093,31.74985-2.3313,11.09926-6.46255,21.69891-8.23145,32.74617a34.93491,34.93491,0,0,0,.42608,15.00955,8.7293,8.7293,0,0,0,1.07447,2.61492c.41054.55264.44157.7211,1.01362.84729,6.04427-.21188,13.68776-10.21963,16.75076-15.07187,7.85833-14.27693,20.51707-27.89117,38.05262-28.422,4.27284-.01028,8.86291-.01673,12.78389-.02569,11.36336-.01814,22.72685-.07741,34.09035.02642v8c-11.3635.10381-22.727.04453-34.09049.02638-3.28483-.007-9.72511-.0191-12.7841-.02551a32.52407,32.52407,0,0,0-18.59669,4.37033,40.69307,40.69307,0,0,0-12.271,10.64071c-5.10755,7.00513-8.94223,14.77039-14.86874,21.26207-11.322,12.49976-19.66477,1.76772-20.2706-11.17229-.84968-17.622,8.24021-33.52812,9.99837-50.40783.63773-6.76036-1.39743-12.31209-8.02366-14.66861-4.83833-1.7633-9.83772.897-13.74519,4.083-10.189,8.76425-16.79034,21.33137-21.676,33.74983-3.82282,10.52865-6.55368,21.44083-9.43444,32.31388a83.41546,83.41546,0,0,1-2.78792,9.29515,7.919,7.919,0,0,1-.4854.93349c-.42759.28729-.12943,1.239-3.07687,2.19548-3.82194.382-5.037-2.38621-5.91578-4.73555-2.226-7.32005-2.6781-14.824-3.0551-22.23437-.50308-17.518.82279-36.14522,9.69231-51.92569A38.81918,38.81918,0,0,1,347.8609,85.814a9.4108,9.4108,0,0,1,5.085-2.18324c6.889.02226,6.43633,8.13655,5.3082,12.82148-1.90619,8.54169-5.355,16.53961-7.782,24.82722a129.82,129.82,0,0,1-9.18544,24.154c-3.96683,7.88328-8.36733,15.33594-14.66124,21.81685-9.31122,9.88434-21.90671,11.95364-29.30122-1.30056-3.73227-7.40923-4.13858-15.8492-4.04668-23.90651.79324-19.59941,7.30263-44.29128,23.95967-56.35525,2.69766-1.951,7.18044-2.56714,9.22349.92744,4.519,7.31738-5.04385,30.08205-7.78042,38.39382-5.72076,16.06087-30.30426,61.66188-51.68632,47.88051-4.21-3.00877-6.55843-7.53471-8.46269-12.12036-4.61324-11.40771-4.7081-24.16006-1.95232-35.94519,3.21177-13.60919,11.62077-32.07927,24.445-39.085-1.26722.05349,4.04109-1.32854,5.018.68992A4.87738,4.87738,0,0,1,287.3239,88.513a9.43279,9.43279,0,0,1,.38959,1.81965c.56845,8.01259-1.10059,15.91091-2.78282,23.55211A131.10248,131.10248,0,0,1,279.73,130.66888c-5.2722,13.613-13.25736,27.10184-25.01649,36.46027-4.95453,4.01791-10.96372,7.58071-17.53788,7.73851-13.29495.70427-26.12209-8.73532-29.84431-21.39541-4.00375-15.10014,2.65656-31.25734,11.12164-43.47942a52.14959,52.14959,0,0,1,38.14826-21.81018c5.90992-.37065,10.88525,1.3883,14.14949,6.70382a40.00781,40.00781,0,0,1,5.14358,9.76981c8.13151,23.19388-6.84755,47.85846-26.0178,60.61688-22.46107,15.1862-49.62575,12.83333-63.8651-11.93464-14.97609-28.11746-10.05619-73.088-3.53147-103.34637,2.616-11.37981,5.77774-22.55188,10.77626-33.22943a48.52463,48.52463,0,0,1,7.46634-11.77714c7.79717-8.72159,17.585-5.55666,19.06114,6.03724,3.43807,24.28944-.73976,48.76125-7.50936,71.98866-8.50327,27.32548-20.37277,54.43055-39.718,75.89355-6.01641,6.24257-13.21388,12.55111-22.15889,14.09654a17.15307,17.15307,0,0,1-9.1966-.98529c-5.33344-2.44623-9.51211-6.69755-14.13883-10.17968a116.905,116.905,0,0,0-13.70045-9.91241,23.25786,23.25786,0,0,0-7.45836-3.17206c-2.32217-.50386-4.837.36889-6.81208,1.413a7.2753,7.2753,0,0,0-2.12535,1.64491c-.16787.22687-.15908.36122-.07186.23225a1.16312,1.16312,0,0,0,.0715-.6213c-.08754-.20177.39424.47425,1.26794.93768a15.72716,15.72716,0,0,0,6.32583,1.76416,59.99043,59.99043,0,0,0,27.25534-3.28935c20.40287-7.19719,30.60936-30.61915,28.90993-51.13742-.79739-10.17908-5.75712-20.05513-14.5622-25.28093-17.05356-9.65665-33.9452,10.34917-41.88384,23.82162-4.26767,7.08841-6.79515,14.81654-9.40009,22.76394-3.40736,10.69019-6.3191,21.60781-8.94691,32.57463C80.871,175.34885,76.34732,197.7331,75.42132,220.009c-.06407,5.34819-.05887,10.618,1.26186,15.80694,1.304,4.77643,2.93927,10.03386,5.43188,14.37672.11237.154.20876.25876.25562.31681.03758.04274.01525.01351-.17229-.05226a1.75,1.75,0,0,0-.87545-.04836,1.035,1.035,0,0,0-.48207.20627,1.90817,1.90817,0,0,0,.533-.59055c1.6554-2.57295,2.50267-5.649,3.43769-8.82989A164.0522,164.0522,0,0,0,88.31345,224.837a324.70488,324.70488,0,0,0,3.75593-33.66028c.42533-11.0595,1.427-22.65941-3.94206-32.7724a50.82007,50.82007,0,0,0-9.734-12.794,45.40184,45.40184,0,0,0-12.45569-8.87362,46.2856,46.2856,0,0,0-19.06081-3.76938c-3.994.00234-9.06223.00375-12.78344.00585l-34.08857.01571-.00485-8Z"
        fill="#$logoColorHex"/>
        </g>
        </svg>''';

    return BlocListener<SplashScreenBloc, SplashScreenState>(
      listener: (final context, final state) {
        setState(() {
          if (state is InitialState) {
            _loadingAnimationController.animateTo(
              0.3,
              curve: Curves.easeIn,
            );
          }
          if (state is LoadState) {
            _loadingAnimationController.animateTo(
              0.5,
              curve: Curves.easeIn,
            );
          }
          if (state is SuccessState) {
            _loadingAnimationController.animateTo(
              .10,
              curve: Curves.easeIn,
            );
          }
          if (state is ErrorState) {
            _loadingAnimationController.animateTo(
              .8,
              curve: Curves.easeIn,
            );
          }
          _loadingAnimationController.addListener(() {
            setState(() {});
          });
        });
      },
      child: Stack(
        fit: StackFit.passthrough,
        alignment: Alignment.center,
        children: [
          AnimatedBuilder(
            animation: _loadingAnimationController,
            builder: (final context, final child) => CustomPaint(
              size: Size(widget.screenWidth, _logoSize.height),
              painter: LogoCustomPainter(
                  loadingAnimation: _loadingAnimationController,
                  themeData: widget.themeData,
                  logoSize: _logoSize),
            ),
          ),
          SvgPicture.string(
            logoSVGString,
            width: _logoSize.width,
            height: _logoSize.height,
            theme: SvgTheme(currentColor: widget.themeData.primaryColor),
          ),
        ],
      ),
    );
  }
}
